{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlphabetical","setState","ALPHABET","sortByLength","LENGTH","sortReversed","reset","this","resetIsHidden","sortedGoods","goods","visibleGoods","sort","goodA","goodB","localeCompare","length","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,yGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGW,SAARD,OAAQ,eAARA,IAAQ,uBAARA,IAAQ,oBAARA,MAAQ,KA4CN,IAAME,EAAG,iKA6BZ,OA7BY,oCACdC,MAAc,CACZC,YAAY,EACZC,SAAUL,EAASM,MACnB,EAEFC,iBAAmB,WACjB,EAAKC,SAAS,CACZH,SAAUL,EAASS,UAEvB,EAAE,EAEFC,aAAe,WACb,EAAKF,SAAS,CACZH,SAAUL,EAASW,QAEvB,EAAE,EAEFC,aAAe,WACb,EAAKJ,UAAS,SAACL,GAAY,MAAM,CAC/BC,YAAaD,EAAMC,WACpB,GACH,EAAE,EAEFS,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,MAEvB,EAAC,EA8DA,OA9DA,mCAED,WACE,MAAiCQ,KAAKX,MAA9BC,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SACdU,EAAgBX,GAAcC,IAAaL,EAASM,KACpDU,EAnEH,SACLC,EAAgB,GAEf,IADCZ,EAAQ,EAARA,SAAUD,EAAU,EAAVA,WAENc,EAAY,YAAOD,GAqBzB,OAnBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQhB,GACN,KAAKL,EAASS,SACZ,OAAOW,EAAME,cAAcD,GAE7B,KAAKrB,EAASW,OACZ,OAAOS,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,EAEb,IAEInB,GACFc,EAAaM,UAIfC,QAAQC,IAAIrB,EAAUD,GAEfc,CACT,CAyCwBS,CAAkB1B,EAAiBa,KAAKX,OAE5D,OACE,sBAAKyB,UAAU,kBAAiB,UAC9B,sBAAKA,UAAU,UAAS,UACtB,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYzB,IAAaL,EAASS,WAEtCsB,QAASjB,KAAKP,iBAAiB,SAChC,wBAID,wBACEsB,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYzB,IAAaL,EAASW,SAEtCoB,QAASjB,KAAKJ,aAAa,SAC5B,mBAID,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAa1B,IAEjB2B,QAASjB,KAAKF,aAAa,SAC5B,YAGCG,GACA,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAASjB,KAAKD,MAAM,SACrB,aAML,6BACE,6BACGG,EAAYgB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAM,SAAaA,GAAPA,EAAiB,UAMrD,KAAC,EA3Fa,CAASC,IAAMC,WC3D/BC,IAASC,OACP,cAAC,EAAG,IACJC,SAASC,eAAe,Q","file":"static/js/main.f9b2850d.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodA, goodB) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return goodA.localeCompare(goodB);\n\n      case SortType.LENGTH:\n        return goodA.length - goodB.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state:State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetical = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  sortReversed = () => {\n    this.setState((state: State) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const resetIsHidden = isReversed || sortType !== SortType.NONE;\n    const sortedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortAlphabetical}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.sortReversed}\n          >\n            Reverse\n          </button>\n          {(resetIsHidden) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {sortedGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}